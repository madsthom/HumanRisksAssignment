// <auto-generated />
using System;
using HumanRisksAssignment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HumanRisksAssignment.Migrations
{
    [DbContext(typeof(RiskAssessmentContext))]
    [Migration("20190517102449_AddSeedData")]
    partial class AddSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HumanRisksAssignment.Models.RiskAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("RiskAssessments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fddce38a-25cc-45d2-b4a0-1a9bae75fa7f"),
                            Latitude = 57.054516999999997,
                            Longitude = 9.9093795999999994,
                            Title = "Risk Assessment 1"
                        },
                        new
                        {
                            Id = new Guid("32ca327a-8fee-44f4-9401-2304ca6b55ad"),
                            Latitude = 57.035969700000003,
                            Longitude = 9.9329561999999996,
                            Title = "Risk Assessment 2"
                        });
                });

            modelBuilder.Entity("HumanRisksAssignment.Models.Threat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Level");

                    b.Property<Guid>("RiskAssessmentId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("RiskAssessmentId");

                    b.ToTable("Threats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f494a1b1-aac9-411a-8ba4-a673828854b0"),
                            Level = 0,
                            RiskAssessmentId = new Guid("fddce38a-25cc-45d2-b4a0-1a9bae75fa7f"),
                            Title = "Some threat"
                        },
                        new
                        {
                            Id = new Guid("6213d44f-57b9-4e57-883e-c041b6cde84d"),
                            Level = 2,
                            RiskAssessmentId = new Guid("fddce38a-25cc-45d2-b4a0-1a9bae75fa7f"),
                            Title = "Some other threat"
                        },
                        new
                        {
                            Id = new Guid("97f497eb-d909-42a2-b67c-8074c7f88491"),
                            Level = 2,
                            RiskAssessmentId = new Guid("fddce38a-25cc-45d2-b4a0-1a9bae75fa7f"),
                            Title = "This is a threat"
                        },
                        new
                        {
                            Id = new Guid("f3a0920a-c5c6-4655-bc61-f25faaa5770f"),
                            Level = 1,
                            RiskAssessmentId = new Guid("32ca327a-8fee-44f4-9401-2304ca6b55ad"),
                            Title = "Some failure threat"
                        },
                        new
                        {
                            Id = new Guid("390a5ad4-80ff-492f-9565-04883f9c80bc"),
                            Level = 1,
                            RiskAssessmentId = new Guid("32ca327a-8fee-44f4-9401-2304ca6b55ad"),
                            Title = "Some unknown threat"
                        });
                });

            modelBuilder.Entity("HumanRisksAssignment.Models.Threat", b =>
                {
                    b.HasOne("HumanRisksAssignment.Models.RiskAssessment", "RiskAssessment")
                        .WithMany("Threats")
                        .HasForeignKey("RiskAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
