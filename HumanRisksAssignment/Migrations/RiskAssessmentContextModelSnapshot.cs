// <auto-generated />
using System;
using HumanRisksAssignment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HumanRisksAssignment.Migrations
{
    [DbContext(typeof(RiskAssessmentContext))]
    partial class RiskAssessmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HumanRisksAssignment.Models.RiskAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("RiskAssessments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fddce38a-25cc-45d2-b4a0-1a9bae75fa7f"),
                            Latitude = 57.054516999999997,
                            Longitude = 9.9093795999999994,
                            Title = "Risk Assessment 1"
                        },
                        new
                        {
                            Id = new Guid("32ca327a-8fee-44f4-9401-2304ca6b55ad"),
                            Latitude = 57.035969700000003,
                            Longitude = 9.9329561999999996,
                            Title = "Risk Assessment 2"
                        });
                });

            modelBuilder.Entity("HumanRisksAssignment.Models.Threat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Level");

                    b.Property<Guid>("RiskAssessmentId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("RiskAssessmentId");

                    b.ToTable("Threats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f2f4c20-a879-4928-b20f-5df458cd9537"),
                            Level = 0,
                            RiskAssessmentId = new Guid("fddce38a-25cc-45d2-b4a0-1a9bae75fa7f"),
                            Title = "Some threat"
                        },
                        new
                        {
                            Id = new Guid("7ade31c9-f01d-4911-883b-b267bf28ad73"),
                            Level = 1,
                            RiskAssessmentId = new Guid("fddce38a-25cc-45d2-b4a0-1a9bae75fa7f"),
                            Title = "Some other threat"
                        },
                        new
                        {
                            Id = new Guid("4659c06b-e658-49bf-888a-2c557ef90deb"),
                            Level = 2,
                            RiskAssessmentId = new Guid("fddce38a-25cc-45d2-b4a0-1a9bae75fa7f"),
                            Title = "This is a threat"
                        },
                        new
                        {
                            Id = new Guid("f30241a5-8891-470c-a18e-07bbb42af44d"),
                            Level = 0,
                            RiskAssessmentId = new Guid("32ca327a-8fee-44f4-9401-2304ca6b55ad"),
                            Title = "Some failure threat"
                        },
                        new
                        {
                            Id = new Guid("ad359c38-932c-4564-993c-45b8b098cbe1"),
                            Level = 1,
                            RiskAssessmentId = new Guid("32ca327a-8fee-44f4-9401-2304ca6b55ad"),
                            Title = "Some unknown threat"
                        });
                });

            modelBuilder.Entity("HumanRisksAssignment.Models.Threat", b =>
                {
                    b.HasOne("HumanRisksAssignment.Models.RiskAssessment", "RiskAssessment")
                        .WithMany("Threats")
                        .HasForeignKey("RiskAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
